# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # store build  files
      - store_artifacts:
          path: ~/repo

      
      - setup_remote_docker
      
       # install docker client
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
      
      # install docker compose
      - run:
          name: Install Docker Compose
          command: | 
            set -x
            sudo curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      
      # start test infrastructure
      - run: 
          name: Start test infrastructure
          command:  |
             set -x
             cd ~/repo/docker
             docker-compose -f test-environment.yml up -d
      
      - run:
          name: Docker ps
          command: |
            docker ps
     
      - run:
          name: Sleep 
          command: |
            sleep 120
            
      
      - run:
          name: Connect config server
          command: |
            curl --retry 30 --retry-delay 10 --retry-connrefused http://127.0.0.1:8888/product-service/default
      
      # run gradle build
#      - run: gradle build --debug
#      
#
#      - deploy:
#          name: Build and push Docker image
#          command: |
#            #TAG="0.1.${CIRCLE_BUILD_NUM}"
#            TAG="latest"
#            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
#            
#            cd ~/repo/product-composite-service
#            docker build -t maltor/product-composite-service:$TAG .
#            docker push maltor/product-composite-service:$TAG
#            
#            cd ~/repo/product-service
#            docker build -t maltor/product-service:$TAG .
#            docker push maltor/product-service:$TAG
#            
#            cd ~/repo/recommendation-service
#            docker build -t maltor/recommendation-service:$TAG .
#            docker push maltor/recommendation-service:$TAG 
#            
#            cd ~/repo/review-service
#            docker build -t maltor/review-service:$TAG .
#            docker push maltor/review-service:$TAG 
