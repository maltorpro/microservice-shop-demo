# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # store build  files
      - store_artifacts:
          path: ~/repo

      - setup_remote_docker
      
      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      
      # start test infrastructure
      - run: 
          name: Start test infrastructure
          command:  |
             set -x
             cd ~/repo/docker
             docker-compose -f test-environment.yml up -d
             docker run --network container:config-server \
              appropriate/curl --retry 5 --retry-delay 30 --retry-connrefused http://localhost:8888/product-service/default
      
      # run gradle build
      - run: gradle build --debug
      

      - deploy:
          name: Build and push Docker image
          command: |
            #TAG="0.1.${CIRCLE_BUILD_NUM}"
            TAG="latest"
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            
            cd ~/repo/product-composite-service
            docker build -t maltor/product-composite-service:$TAG .
            docker push maltor/product-composite-service:$TAG
            
            cd ~/repo/product-service
            docker build -t maltor/product-service:$TAG .
            docker push maltor/product-service:$TAG
            
            cd ~/repo/recommendation-service
            docker build -t maltor/recommendation-service:$TAG .
            docker push maltor/recommendation-service:$TAG 
            
            cd ~/repo/review-service
            docker build -t maltor/review-service:$TAG .
            docker push maltor/review-service:$TAG 
