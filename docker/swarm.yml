version: "3"
services:

  #######################################
  #####       manager1               ####
  #######################################
    
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - shopnet
  
  
  #######################################
  #####    infrastructure1           ####
  #######################################
  
  shop-db:
    image: postgres:10
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]
    environment:
        POSTGRES_USER: shop
        POSTGRES_PASSWORD: shop
        POSTGRES_DB: shop-db
        MAX_CONNECTIONS: 500
    ports:
    - "5432:5432"
    networks:
    - shopnet  
  
  rabbitmq:
    image: rabbitmq:3.6-management
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]
    ports:
     - "15672:15672"
    networks:
     - shopnet  
  
  #server 
  config-server:
    image: maltor/config-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]
      resources:
        limits:
          memory: 256M
    ports:
     - "8888:8888"
    networks:
     - shopnet
  
  discovery-server:
    image: maltor/discovery-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0    
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]    
      resources:
        limits:
          memory: 256M
    ports:
     - "8761:8761"
    networks:
     - shopnet
      
  auth-server:
    image: maltor/auth-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]    
      resources:
        limits:
          memory: 128M
    ports:
     - "9999:9999"
    networks:
     - shopnet
       
  resource-server:
    image: maltor/resource-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]    
      resources:
       limits:
         memory: 128M
    ports:
     - "9090:9090"
    networks:
     - shopnet   

  edge-server:
    image: maltor/edge-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == infrastructure1]    
      resources:
        limits:
          memory: 256M
    ports:
     - "8765:8765"
    networks:
     - shopnet
     
     
  #######################################
  #####         services1            ####
  #######################################             
  
  product-composite-service:
    image: maltor/product-composite-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == services1] 
      resources:
        limits:
          memory: 256M
    networks:
      - shopnet
  
  product-service:
    image: maltor/product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == services1] 
      resources:
        limits:
          memory: 256M
    networks:
    - shopnet   
   
  recommendation-service:
    image: maltor/recommendation-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == services1] 
      resources:
        limits:
          memory: 256M
    networks:
     - shopnet

  review-service:
    image: maltor/review-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == services1] 
      resources:
        limits:
          memory: 256M
    networks:
     - shopnet
     

  #######################################
  #####    monitoring1               ####
  #######################################
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    deploy:
      placement:
        constraints: [node.hostname == monitoring1]  
    ports:
     - 9200:9200
     - 9300:9300
    networks:
      - shopnet
  
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    deploy:
      placement:
        constraints: [node.hostname == monitoring1]
    ports:
     - 5601:5601
    environment:
     - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - shopnet
  
  logstash:
    image: docker.elastic.co/logstash/logstash:6.2.2
    deploy:
      placement:
        constraints: [node.hostname == monitoring1]
      resources:
        limits:
          memory: 256M
    ports:
    - 12201:12201
    - 5000:5000
    networks:
      - shopnet
    command: logstash -e 'input { tcp { port => 5000 codec => "json" } } output { elasticsearch { hosts => ["elasticsearch"] index => "micro-%{service}"} }'
 
  
     
  #monitoring
  
  turbine-server:
    image: maltor/turbine-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == monitoring1]    
      resources:
        limits:
          memory: 128M
    ports:
       - "8989:8989"
    networks:
     - shopnet

  monitor-dashboard:
    image: maltor/monitor-dashboard
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CERTIFICATE_CHECK: 0
    deploy:
      placement:
        constraints: [node.hostname == monitoring1]    
      resources:
        limits:
          memory: 128M
    ports:
     - "7979:7979"
    networks:
     - shopnet          
      
networks:
  shopnet:
