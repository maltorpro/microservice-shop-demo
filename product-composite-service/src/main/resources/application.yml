server:
  port: 0

info:
  component: Product Composite Service

security:
  oauth2:
    resource:
      userInfoUri: http://localhost:9090/user

logging:
  level:
    root: WARN

    # Get info on failed OAuth access token validations
    org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoTokenServices: INFO

    # Get info regarding connection to the cofig server and retries if required
    org.springframework.cloud.config.client.ConfigServicePropertySourceLocator: INFO
    org.springframework.retry.support.RetryTemplate: DEBUG

    # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
    com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty: WARN
    de.maltorpro: INFO



spring.rabbitmq:
  host: localhost
  port: 5672

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 3
      execution:
        isolation:
#          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 4000



ribbon:
  # Interval to refresh the server list from the source
  serverListRefreshInterval: 1000
#
#  # Connect timeout used by Apache HttpClient
#  connectTimeout: 100
#
#  # Read timeout used by Apache HttpClient
#  readTimeout: 10000
#
#  ConnectTimeout: 100
#  ReadTimeout: 3000

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 1
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 1
    instanceInfoReplicationIntervalSeconds: 1
    initialInstanceInfoReplicationIntervalSeconds: 1

app:
  ConnectTimeout: 100
  ReadTimeout: 3000

#    region: default
#    availabilityZones:
#      default: ${APPLICATION_DOMAIN:${DOMAIN:defaultZone}}

#stores:
#  ribbon:
#    ServerListRefreshInterval: 1000

---
# For deployment in Docker containers
spring:
  profiles: docker


server:
  port: 8080

spring.rabbitmq.host: rabbitmq

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
